# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

schedules:
  - cron: "0 0 * * *"
    displayName: Daily build and deploy
    branches:
      include:
        - master
    always: true

pool:
  vmImage: "ubuntu-latest"

variables:
  dist_folder: dist
  domain: e3b0c442.io
  pr_repo: e3b0c442/site
  pr_branch: gh-pages
  ci_repo: e3b0c442/e3b0c442.github.io
  ci_branch: master
  git_username: "e3b0c442 CI/CD"
  git_email: "cicd@e3b0c442.io"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "10.x"
    displayName: "Install Node.js"

  - script: |
      git config --global user.email "$(git_email)"
      git config --global user.name "$(git_username)"
    displayName: "Setup Git"

  - script: git clone --single-branch --branch $(pr_branch) https://${GITHUB_PAT}@github.com/$(pr_repo) $(dist_folder)
    displayName: "Clone PR build branch"
    env:
      GITHUB_PAT: $(github_pat)
    condition: eq(variables['Build.Reason'], 'PullRequest')

  - script: git clone --single-branch --branch $(ci_branch) https://${GITHUB_PAT}@github.com/$(ci_repo) $(dist_folder)
    displayName: "Clone production build branch"
    env:
      GITHUB_PAT: $(github_pat)
    condition: in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual')

  - script: |
      npm install
      npm run build
    displayName: "npm install and build"

  - script: |
      pushd $(dist_folder)
      git add . && git commit -m "Production deploy"
      git push origin $(ci_branch)
      popd
    displayName: "Production deploy"
    env:
      GITHUB_PAT: $(github_pat)
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual'))

  - script: |
      pushd $(dist_folder)
      sed -i'' 's/$(domain)/preview.$(domain)/' CNAME
      git add . && git commit -m "PR deploy"
      git push origin $(pr_branch)
      popd
    displayName: "PR deploy"
    env:
      GITHUB_PAT: $(github_pat)
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
