# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

schedules:
  - cron: "0 0 * * *"
    displayName: Daily build and deploy
    branches:
      include:
        - master
    always: true

pool:
  vmImage: "ubuntu-latest"

variables:
  hugo_version: 0.57.2
  hugo_checksum: f4ce91d6909d489fe5461633f6b6bd689ed14c9e06b1b7af110024420aa8fd91
  dist_folder: public
  domain: e3b0c442.io
  pr_repo: e3b0c442/site
  pr_branch: gh-pages
  ci_repo: e3b0c442/e3b0c442.github.io
  ci_branch: master
  git_username: "e3b0c442 CI/CD"
  git_email: "cicd@e3b0c442.io"

steps:
  - script: |
      set -eux
      git config --global user.email "$(git_email)"
      git config --global user.name "$(git_username)"
    displayName: "Setup Git"

  - script: |
      set -eu
      git clone --single-branch --branch $(pr_branch) https://${GITHUB_PAT}@github.com/$(pr_repo) $(dist_folder)
      rm -rf "$(dist_folder)/*" "$(dist_folder)/.!(git)"
      mkdir -p layouts/partials
      echo '<meta name="robots" content="noindex,nofollow">' > layouts/partials/custom_head.html
    displayName: "Clone and set up PR build branch"
    env:
      GITHUB_PAT: $(github_pat)
    condition: eq(variables['Build.Reason'], 'PullRequest')

  - script: |
      set -eu
      git clone --single-branch --branch $(ci_branch) https://${GITHUB_PAT}@github.com/$(ci_repo) $(dist_folder)
      rm -rf "$(dist_folder)/*" "$(dist_folder)/.!(git)"
    displayName: "Clone and clear production build branch"
    env:
      GITHUB_PAT: $(github_pat)
    condition: in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual')

  - script: |
      set -eux
      wget https://github.com/gohugoio/hugo/releases/download/v$(hugo_version)/hugo_extended_$(hugo_version)_Linux-64bit.tar.gz
      echo "$(hugo_checksum)  hugo_extended_$(hugo_version)_Linux-64bit.tar.gz" | sha256sum -c -
      tar xfvz hugo_extended_$(hugo_version)_Linux-64bit.tar.gz
    displayName: "Install Hugo"

  - script: ./hugo
    displayName: "Build site"

  - script: |
      set -eux
      pushd $(dist_folder)
      echo "$(domain)" > CNAME
      git add . && git commit -m "Production deploy" || true
      git push origin $(ci_branch)
      popd
    displayName: "Production deploy"
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'Schedule', 'Manual'))

  - script: |
      set -eux
      pushd $(dist_folder)
      echo "preview.$(domain)" > CNAME
      git add . && git commit -m "PR deploy" || true
      git push origin $(pr_branch)
      popd
    displayName: "PR deploy"
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
